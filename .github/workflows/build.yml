name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Uncomment if you want the pipeline to fail when Quality Gate fails
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: NPM Install dependencies
        run: npm install

      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Scout Scan (source)
        run: |
          docker-scout quickview fs://.
          docker-scout cves fs://.

      - name: Docker build and push
        run: |
          docker build -t myntra .
          docker tag myntra abhishek450/myntra:latest
          docker push abhishek450/myntra:latest
        env:
          DOCKER_CLI_ACI: 1

      - name: Docker Scout Image Scan (built image)
        run: |
          docker-scout quickview abhishek450/myntra:latest
          docker-scout cves abhishek450/myntra:latest

  deploy:
    name: Deploy to EKS
    needs: build   # âœ… match first job name
    runs-on: [self-hosted]
    steps:
      - name: Pull Docker image
        run: docker pull abhishek450/myntra:latest

      - name: Deploy to container
        run: docker run -d --name game -p 3000:3000 abhishek450/myntra:latest

      - name: Update kubeconfig
        run: aws eks --region ap-south-1 update-kubeconfig --name EKS_CLOUD

      - name: Deploy to Kubernetes
        run: kubectl apply -f deployment-service.yml
